"use strict";var Earth=function(e,a){function t(){w=window.innerWidth,u=window.innerHeight,d=new THREE.PerspectiveCamera(R/10,w/u,1,2*R),l=new THREE.Scene,l.add(d);for(var t=new THREE.Geometry,n=0;1e3>n;n++){var r=-1+2*Math.random(),o=-1+2*Math.random(),p=-1+2*Math.random(),v=1/Math.sqrt(Math.pow(r,2)+Math.pow(o,2)+Math.pow(p,2));r*=v,o*=v,p*=v;var m=new THREE.Vector3(r*R,o*R,p*R);t.vertices.push(m)}var M=new THREE.Points(t,new THREE.PointsMaterial({color:"#333333",size:3}));l.add(M);var y=new THREE.PointLight("#ffffff",.5);d.add(y),y.position.set(R/2,R/2,0),y.target=d;var f=new THREE.SphereGeometry(H,50,30),x=new THREE.MeshPhongMaterial({bumpMap:(new THREE.TextureLoader).load("/assets/images/earth-bump.jpg"),bumpScale:4,emissiveMap:(new THREE.TextureLoader).load("/assets/images/earth-lights.jpg"),emissive:"#333333",map:(new THREE.TextureLoader).load("/assets/images/earth-lights.jpg"),specular:"#010101"}),P=new THREE.Mesh(f,x);l.add(P);var S=new THREE.ShaderMaterial({vertexShader:g.atmosphere.vertexShader,fragmentShader:g.atmosphere.fragmentShader,side:THREE.BackSide,blending:THREE.AdditiveBlending,transparent:!0}),b=new THREE.Mesh(f,S);b.scale.set(1.3,1.3,1.3),l.add(b);for(var z=function(e){T.push(new s(a[e].lat,a[e]["long"],a[e].r,e));var t=E(T[0].position,T[e].position);new TWEEN.Tween(t).to({currentPoint:200},2e3).delay(350*e+1500).easing(TWEEN.Easing.Cubic.Out).onUpdate(function(){t.geometry.setDrawRange(0,t.currentPoint)}).start()},n=0;n<a.length;n++)z(n);c=new THREE.WebGLRenderer({alpha:!0,antialias:!0}),c.autoClear=!1,c.setPixelRatio(window.devicePixelRatio),c.setSize(w,u),h=new THREE.EffectComposer(c),h.addPass(new THREE.RenderPass(l,d));var C=new THREE.BloomPass(1.75),B=new THREE.ShaderPass(THREE.RGBShiftShader);B.uniforms.amount.value=.001,B.renderToScreen=!0,h.addPass(C),h.addPass(B),window.addEventListener("resize",i,!1),e.appendChild(c.domElement)}function n(e,a,t){var n=e*Math.PI/180,i=(a-180)*Math.PI/180,r=-t*Math.cos(n)*Math.cos(i),o=t*Math.sin(n),s=t*Math.cos(n)*Math.sin(i);return new THREE.Vector3(r,o,s)}function i(e){d.aspect=window.innerWidth/window.innerHeight,d.updateProjectionMatrix(),c.setSize(window.innerWidth,window.innerHeight)}function r(e){o(),TWEEN.update(e),requestAnimationFrame(r)}function o(){"move"!=e.style.cursor&&(v.x+=75e-5),p.x+=.1*(v.x-p.x),p.y+=.1*(v.y-p.y),d.position.x=R*Math.sin(p.x)*Math.cos(p.y),d.position.y=R*Math.sin(p.y),d.position.z=R*Math.cos(p.x)*Math.cos(p.y),d.lookAt(m),c.render(l,d),h.render()}function s(e,a,t,i){var r=n(e,a,H),o=new THREE.SphereGeometry(t,32,32),s=new THREE.MeshBasicMaterial({color:"#769386",opacity:.6,side:THREE.DoubleSide,transparent:!0}),E=new THREE.Mesh(o,s);E.position.set(r.x,r.y,r.z),E.scale.set(.01,.01,.01),E.lookAt(m),l.add(E),new TWEEN.Tween(E.scale).to({x:1,y:1,z:1},1e3).delay(350*i+1500).easing(TWEEN.Easing.Cubic.Out).start();var d=new THREE.RingGeometry(t+.5,t+1.5,32),c=new THREE.MeshBasicMaterial({color:"#769386",opacity:.2,side:THREE.DoubleSide,transparent:!0}),h=new THREE.Mesh(d,c);return h.position.set(r.x,r.y,r.z),h.scale.set(.01,.01,.01),h.lookAt(m),l.add(h),new TWEEN.Tween(h.scale).to({x:1,y:1,z:1},1500).delay(350*i+1500).easing(TWEEN.Easing.Cubic.Out).start(),E}function E(e,a,t){var n=e.clone().sub(a).length(),i=e.clone().lerp(a,.5),r=i.length();i.normalize(),i.multiplyScalar(r+.25*n);var o=(new THREE.Vector3).subVectors(e,a);o.normalize();var s=i.clone().add(o.clone().multiplyScalar(.25*n)),E=i.clone().add(o.clone().multiplyScalar(n*-.25)),d=new THREE.CubicBezierCurve3(e,e,s,i),c=new THREE.CubicBezierCurve3(i,E,a,a),h=d.getPoints(100);h=h.splice(0,h.length-1),h=h.concat(c.getPoints(100)),h.push(m);for(var w=new THREE.BufferGeometry,u=new Float32Array(3*h.length),T=0;T<h.length;T++)u[3*T+0]=h[T].x,u[3*T+1]=h[T].y,u[3*T+2]=h[T].z;w.addAttribute("position",new THREE.BufferAttribute(u,3)),w.setDrawRange(0,0);var p=new THREE.LineBasicMaterial({color:new THREE.Color(16777215),linewidth:3,opacity:.25,transparent:!0}),v=new THREE.Line(w,p);return v.currentPoint=0,l.add(v),v}var d=void 0,l=void 0,c=void 0,h=void 0,w=void 0,u=void 0,T=[],p={x:0,y:Math.PI/7},v={x:0,y:Math.PI/7},m=new THREE.Vector3(0,0,0),R=(new THREE.Clock,425),H=150,g={atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = pow( 0.8 - dot( vNormal, vec3( 0, 0, 1.0 ) ), 3.0 );","gl_FragColor = vec4( 0.3, 0.4, 0.3, 0.05 ) * intensity;","}"].join("\n")}};return t(),r(),this.animate=r,this};